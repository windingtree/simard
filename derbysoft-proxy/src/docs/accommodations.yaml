openapi: 3.0.3
info:
  title: The Accommodations
  description: >-
    This is the interface documentation for the RESTful API interface for the
    set of Windingtree Accommodations Proxy servers
  contact:
    email: dev@windingtree.com
  license:
    name: GNU GENERAL PUBLIC LICENSE v3
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: 1.0.0
servers:
  - url: https://staging.simard-pay-url/v1
    description: Derbysoft Proxy Test API server
  - url: https://production.simard-pay-url/v1
    description: Derbysoft Proxy Production API server
tags:
  - name: offers
    description: Operations with Offers
  - name: orders
    description: Operations with Orders
paths:
  /offers/search:
    post:
      tags:
        - offers
      summary: Search for offers matching search criteria
      operationId: offersWithSearchCriteria
      requestBody:
        description: Search for offers matching input criteria
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteria'
      responses:
        '200':
          description: Offers Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No offers found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
  /offers/{offerId}/price:
    post:
      tags:
        - offers
      summary: Get the final price for a selected Offer
      description: Providing an offer information with confirmed price
      operationId: priceOffer
      parameters:
        - name: offerId
          in: path
          description: ID of a selected offer
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      requestBody:
        description: Optional priced offer request criteria
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PricedOfferRequest'
      responses:
        '200':
          description: Offer with confirmed price
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricedOfferResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized to retrieve this order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests, rate limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
  /orders:
    get:
      tags:
        - orders
      summary: Return an existing order by Offer Id
      operationId: getOrderByOfferId
      parameters:
        - in: query
          name: offerId
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
          description: Offer Id of the order to return
      responses:
        '200':
          description: Order returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWithOfferResponse'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
  /orders/{orderId}:
    get:
      tags:
        - orders
      summary: Return an existing order by Order Id
      operationId: getOrderByOrderId
      parameters:
        - in: path
          name: orderId
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
          description: Order Id of the order to return
      responses:
        '200':
          description: Order returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWithOfferResponse'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - orders
      summary: Cancel an existing order
      operationId: cancelOrder
      parameters:
        - in: path
          name: orderId
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
          description: Order Id of the order to cancel
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancellationResponse'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
  /orders/createWithOffer:
    post:
      tags:
        - orders
      summary: Place an order using a given offer
      operationId: orderCreateWithOffer
      requestBody:
        description: Reference of the offers and details of the passengers
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOfferRequest'
      responses:
        '200':
          description: Order Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWithOfferResponse'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
  /accommodations:
    get:
      tags:
        - accommodations
      summary: Retrieve all hotel(s)/accommodation(s)
      operationId: retrieveAllAccommodations
      responses:
        '200':
          description: Accommodations/hotels found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationsSearchResponse'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No accommodations/hotels found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
  /accommodations/search:
    post:
      tags:
        - accommodations
      summary: Search for hotel(s)/accommodation(s) by accommodationIds or location
      operationId: searchAccommodationsByIdOrLocation
      requestBody:
        description: >-
          An array of accommodationIds or a location to search for
          accommodations
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AccommodationsByAccommodationIds'
                - $ref: '#/components/schemas/AccommodationsByLocation'
      responses:
        '200':
          description: Accommodations/hotels found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationsSearchResponse'
        '401':
          description: Authorization required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No accommodations/hotels found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Content should be application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
      x-codegen-request-body-name: body
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SearchCriteria:
      description: An object to provide search criteria
      type: object
      required:
        - accommodation
        - passengers
      properties:
        accommodation:
          $ref: '#/components/schemas/AccommodationCriteria'
        passengers:
          description: >-
            The passengers involved in the search. Allows personalization and
            custom offers.
          type: array
          minItems: 1
          maxItems: 99
          items:
            $ref: '#/components/schemas/PassengerSearch'
        loyaltyPrograms:
          description: Loyalty program(s) to be included as part of search criteria
          allOf:
            - $ref: '#/components/schemas/LoyaltyPrograms'
    SearchResponse:
      description: An object to return search results
      type: object
      required:
        - offers
        - accommodations
      properties:
        offers:
          description: The indexed list of offers
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Offer'
        accommodations:
          description: The accommodations matching an search request
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Accommodation'
        pricePlans:
          description: The indexed list of price plans
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PricePlan'
        passengers:
          description: The mapping of the passenger references
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PassengerSearch'
    Error:
      description: Object describing an error
      type: object
      required:
        - message
      properties:
        message:
          description: Error message
          type: string
          example: Something went wrong
        code:
          description: Error code
          type: string
          pattern: ^[0-9A-Z]+$
          example: E01
    UUID:
      description: Unique identifier for Offers and Orders
      type: string
      format: uuid
      minLength: 36
      maxLength: 36
      pattern: ^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$
      example: 2be512eb-288c-4ce4-a3eb-674579930122
    PricedOfferRequest:
      description: An object to provide optional priced offer details
      type: object
      properties:
        loyaltyPrograms:
          description: Loyalty program(s) to be included as part of priced offer request
          allOf:
            - $ref: '#/components/schemas/LoyaltyPrograms'
    PricedOfferResponse:
      description: An offer with confirmed price
      type: object
      required:
        - offerId
        - offer
      properties:
        offerId:
          $ref: '#/components/schemas/UUID'
        offer:
          $ref: '#/components/schemas/OfferPriced'
    CreateWithOfferResponse:
      description: An order
      type: object
      required:
        - orderId
        - order
      properties:
        orderId:
          $ref: '#/components/schemas/UUID'
        order:
          $ref: '#/components/schemas/Order'
    OrderCancellationResponse:
      description: Confirmation of an order cancellation
      type: object
      required:
        - orderId
        - status
      properties:
        orderId:
          $ref: '#/components/schemas/UUID'
        status:
          $ref: '#/components/schemas/OrderStatus'
      example:
        orderId: 11111111-2222-3333-4444-000000000001
        status: CANCELLED
    CreateOfferRequest:
      description: An object to provide order details
      type: object
      required:
        - offerId
        - passengers
        - guaranteeId
      properties:
        offerId:
          $ref: '#/components/schemas/UUID'
        passengers:
          description: Indexed dictionary of the passengers
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PassengerBooking'
        guaranteeId:
          $ref: '#/components/schemas/UUID'
        loyaltyPrograms:
          description: Loyalty program(s) to be used when creating booking
          allOf:
            - $ref: '#/components/schemas/LoyaltyPrograms'
        remarks:
          description: Optional remarks or special instructions to the hotel/accommodation
          type: array
          items: 
            type: string
    AccommodationsSearchResponse:
      description: Accommodations/hotels matching a search request
      type: array
      items:
        $ref: '#/components/schemas/Accommodation'
    AccommodationsByAccommodationIds:
      description: Criteria for listing accommodations/hotels by IDs
      type: object
      required:
        - hotelIds
      properties:
        hotelIds:
          description: array of accommodation/hotel IDs that search should be restricted to
          type: array
          items:
            $ref: '#/components/schemas/AccommodationId'
    AccommodationsByLocation:
      description: Criteria for listing accommodations/hotels by location
      type: object
      required:
        - location
      properties:
        location:
          $ref: '#/components/schemas/LocationSearch'
    AccommodationCriteria:
      description: Criteria for the accommodation search
      type: object
      oneOf:
        - $ref: '#/components/schemas/AccommodationCriteriaByLocation'
        - $ref: '#/components/schemas/AccommodationCriteriaByAccommodationIds'
    PassengerSearch:
      description: A representation of a passenger
      type: object
      required:
        - type
        - count
      properties:
        type:
          $ref: '#/components/schemas/PassengerType'
        count:
          description: Number of associated passengers of the same type
          type: integer
          example: 2
          default: 1
        childrenAges:
          description: >-
            Array containing the ages of the children. Mandatory if PTC is INF
            or CHD.
          type: array
          items:
            type: number
        loyaltyPrograms:
          description: A list of loyalty programs that this passenger benefits from
          allOf:
            - $ref: '#/components/schemas/LoyaltyPrograms'
      example:
        type: ADT
        count: 1
    LoyaltyPrograms:
      description: A list of loyalty programs
      type: array
      items:
        $ref: '#/components/schemas/LoyaltyProgram'
    Offer:
      description: An offer object
      type: object
      required:
        - expiration
        - price
        - pricePlansReferences
      properties:
        expiration:
          $ref: '#/components/schemas/Expiration'
        price:
          $ref: '#/components/schemas/Price'
        pricePlansReferences:
          $ref: '#/components/schemas/PricePlansReferences'
        convertedPrice:
          $ref: '#/components/schemas/ConvertedPrice'
        refundability:
          description: refundability/cancellation policy associated with a given price plan
          $ref: '#/components/schemas/RefundabilityPolicy'
    Accommodation:
      description: An accommodation object
      type: object
      required:
        - hotelId
        - name
        - type
        - description
        - location
        - rating
        - contactInformation
        - checkinoutPolicy
        - otherPolicies
        - media
        - roomTypes
      properties:
        accommodationId:
          $ref: '#/components/schemas/AccommodationId'
        hotelId:
          description: Id of the hotel from supplier
          type: string
          example: GOH202
        name:
          description: The name of the property or accommodation
          type: string
          example: Comfort Hotel Xpress Stockholm Central
        type:
          $ref: '#/components/schemas/AccommodationType'
        description:
          description: The description of the property
          type: string
        location:
          $ref: '#/components/schemas/AccommodationLocation'
        rating:
          description: The award rating as per country rules
          type: integer
          example: 3
        contactInformation:
          $ref: '#/components/schemas/ContactInformation'
        checkinoutPolicy:
          $ref: '#/components/schemas/CheckInOutPolicy'
        otherPolicies:
          type: array
          items:
            type: string
        media:
          $ref: '#/components/schemas/Media'
        roomTypes:
          description: Type of rooms available for this accommodation
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RoomTypes'
    PricePlan:
      description: Describes the attributes of the price plan
      type: object
      properties:
        name:
          description: The marketing name of this price plan
          type: string
          maxLength: 24
          example: Premium Economy
        amenities:
          description: The amenities for this price plan
          type: array
          maxItems: 99
          items:
            type: string
            example: meal
        checkedBaggages:
          description: the list of checked checkedBaggages
          type: object
          properties:
            quantity:
              type: integer
              example: 2
    OfferPriced:
      type: object
      required:
        - expiration
        - price
        - pricedItems
        - disclosures
      properties:
        expiration:
          $ref: '#/components/schemas/Expiration'
        price:
          $ref: '#/components/schemas/Price'
        pricedItems:
          description: Breakdown of items priced
          type: array
          items:
            $ref: '#/components/schemas/PriceItem'
        disclosures:
          description: List of disclosures
          type: array
          items:
            $ref: '#/components/schemas/Disclosure'
    Order:
      description: Representation of the order
      type: object
      required:
        - supplierReservationId
        - status
      properties:
        supplierReservationId:
          description: >-
            Hotel reservation ID that should be presented to the client or at
            reception desk
          type: string
        restrictions:
          $ref: '#/components/schemas/ServiceRestrictions'
        status:
          $ref: '#/components/schemas/OrderStatus'
    OrderStatus:
      description: Status of the order
      type: string
      enum:
        - IN_PROGRESS
        - CONFIRMED
        - WAITLIST
        - CANCELLED
        - CREATION_FAILED
    PassengerBooking:
      description: A representation of a passenger
      type: object
      required:
        - type
        - lastnames
        - firstnames
      properties:
        type:
          $ref: '#/components/schemas/PassengerType'
        count:
          description: Number of associated passengers of the same type
          type: integer
          example: 2
          default: 1
        civility:
          description: The civility of the passenger
          type: string
          enum:
            - MR
            - MRS
          example: MR
        lastnames:
          description: The list of last names of this passenger
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/Name'
        firstnames:
          description: The list of first names of this passenger
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/Name'
        middlenames:
          description: The list of middle names of this passenger
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/Name'
        gender:
          description: The gender of the passenger
          type: string
          enum:
            - Male
            - Female
          example: Male
        birthdate:
          description: The birthdate of the passenger
          type: string
          format: date
          example: '1980-03-21'
        contactInformation:
          description: The contact information of the passenger
          type: array
          minItems: 1
          items:
            oneOf:
              - $ref: '#/components/schemas/PhoneNumber'
              - $ref: '#/components/schemas/Email'
        loyaltyPrograms:
          description: A list of loyalty programs that this passenger benefits from
          allOf:
            - $ref: '#/components/schemas/LoyaltyPrograms'
        address:
          $ref: '#/components/schemas/PassengerAddress'
      example:
        type: ADT
        lastnames:
          - Marley
        firstnames:
          - Bob
        gender: Male
        birthdate: '1980-03-21'
        contactInformation:
          - '+32123456789'
          - contact@org.co.uk
    AccommodationId:
      description: Unique internal Id of the hotel
      type: string
      example: 44533a5052454d494552494e4e2d445542414952
    LocationSearch:
      description: The location of a specific place
      type: object
      properties:
        rectangle:
          $ref: '#/components/schemas/LocationRectangle'
        circle:
          $ref: '#/components/schemas/LocationCircle'
    AccommodationCriteriaByLocation:
      description: Criteria for the accommodation search
      type: object
      required:
        - location
        - arrival
        - departure
      properties:
        location:
          $ref: '#/components/schemas/LocationSearch'
        arrival:
          type: string
          description: arrival day in the accommodation
          format: date-time
        departure:
          type: string
          description: departure day from the accommodation
          format: date-time
        roomCount:
          type: number
          description: number of rooms searched
    AccommodationCriteriaByAccommodationIds:
      description: Criteria for the accommodation search
      type: object
      required:
        - location
        - arrival
        - departure
      properties:
        hotelIds:
          description: array of hotel IDs that search should be restricted to
          type: array
          items:
            $ref: '#/components/schemas/AccommodationId'
        arrival:
          type: string
          description: arrival day in the accommodation
          format: date-time
        departure:
          type: string
          description: departure day from the accommodation
          format: date-time
        roomCount:
          type: number
          description: number of rooms searched
    PassengerType:
      description: Type of a passenger
      type: string
      minLength: 3
      maxLength: 3
      enum:
        - ADT
        - CHD
        - INF
      example: ADT
    LoyaltyProgram:
      description: Object containing properties of loyalty program that buyer benefits from
      type: object
      required:
        - accountNumber
        - programName
      properties:
        accountNumber:
          type: string
        programName:
          type: string
    Expiration:
      description: The offer expiration time
      type: string
      format: date-time
      example: '2021-04-12T23:20:50.52Z'
    Price:
      description: Price of the service
      type: object
      required:
        - currency
        - public
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        private:
          description: >-
            The private price in currency decimals for this service that the
            distributor owes to the supplier
          $ref: '#/components/schemas/Amount'
        public:
          description: >-
            The public price for this service. The distributor should sell the
            product at this price.
          $ref: '#/components/schemas/Amount'
        commission:
          description: The distributor commission for selling this service
          $ref: '#/components/schemas/Amount'
        taxes:
          description: The taxes to be collected when selling this service.
          $ref: '#/components/schemas/Amount'
    PricePlansReferences:
      description: Maps a price plan with the associated elements
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPricePlanProperties'
      example:
        7b7b18e2-7357-4e98-9be6-aa182e0b090a:
          accommodation: prov.1234
          roomType: ND
    ConvertedPrice:
      description: converted price in USD
      type: object
      properties:
        USD:
          type: string
    RefundabilityPolicy:
      description: Accommodation refundability policy in case of booking cancellation
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: specifies if it is possible to get refund in case of cancellation
          enum:
            - refundable_with_deadline
            - non_refundable
          example: non_refundable
        deadline:
          type: string
          description: >-
            specifies date before which offer can be cancelled without a
            penalty, after this date penaltyAmount is charged
          format: date-time
          example: '2022-10-12T23:59:59.59Z'
        penaltyAmount:
          type: string
          description: Penalty charged in case booking is cancelled after deadline
          pattern: ^[0-9]+(\.[0-9]+){0,1}$
          minLength: 1
          maxLength: 99
          example: '100.00'
      example:
        type: refundable_with_deadline
        deadline: '2022-10-12T23:59:59.59Z'
        penaltyAmount: '100.00'
    AccommodationType:
      description: Type of accommodation service
      type: string
      maxLength: 24
      enum:
        - hotel
      example: hotel
    AccommodationLocation:
      description: Location of the Accommodation
      type: object
      required:
        - lat
        - long
      properties:
        lat:
          type: number
        long:
          type: number
      example:
        lat: 52.520008
        long: 13.524954
    ContactInformation:
      description: Contact information of a hotel
      type: object
      required:
        - address
        - phoneNumbers
        - emails
      properties:
        address:
          $ref: '#/components/schemas/Address'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
    CheckInOutPolicy:
      description: The check-in and check-out time policy, format HH:MM
      type: object
      required:
        - checkinTime
        - checkoutTime
      properties:
        checkinTime:
          type: string
          pattern: ^[0-9]{2}:[0-9]{2}$
          example: '15:00'
        checkoutTime:
          type: string
          pattern: ^[0-9]{2}:[0-9]{2}$
          example: '11:00'
    Media:
      type: array
      nullable: true
      items:
        $ref: '#/components/schemas/MediaItem'
    RoomTypes:
      description: A room type object
      type: object
      required:
        - name
        - description
        - amenities
        - size
        - maximumOccupancy
        - media
        - policies
      properties:
        name:
          description: The name of this room type
          type: string
          example: Twin beds
        description:
          description: A description of the room type
          type: string
          example: Standard twin rooms with two single beds
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/RoomAmenities'
        size:
          $ref: '#/components/schemas/RoomSize'
          nullable: true
        maximumOccupancy:
          $ref: '#/components/schemas/RoomOccupancy'
        media:
          $ref: '#/components/schemas/Media'
          nullable: true
        policies:
          $ref: '#/components/schemas/RoomPolicies'
    PriceItem:
      description: Detail of a priced item
      type: object
      required:
        - fare
        - taxes
      properties:
        fare:
          description: Breakdown of the fare
          type: array
          items:
            $ref: '#/components/schemas/FareItem'
        taxes:
          description: Taxes included in the price
          type: array
          items:
            $ref: '#/components/schemas/TaxItem'
    Disclosure:
      description: Disclosure information
      type: array
      items:
        type: string
      example: The seat charge is applicable to each one-way flight...
    ServiceRestrictions:
      description: Service restrictions
      type: object
      required:
        - refundable
        - exchangeable
      properties:
        refundable:
          description: Is the service refundable?
          type: boolean
          example: false
        exchangeable:
          description: Is the service exchangeable?
          type: boolean
          example: false
        refundFee:
          $ref: '#/components/schemas/Amount'
        exchangeFee:
          $ref: '#/components/schemas/Amount'
    Name:
      description: First, middle or last name
      type: string
      minLength: 1
      maxLength: 42
      example: Bob
    PhoneNumber:
      description: A phone number
      type: string
      pattern: ^([+]{0,1})([0-9- ()/]+)$
      example: '+32123456789'
    Email:
      description: An email
      type: string
      pattern: >-
        ^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-_0-9]+\.)+[a-zA-Z]{2,}))$
      example: contact@org.co.uk
    PassengerAddress:
      description: Address of a passenger
      type: object
      required:
        - addressLine1
      properties:
        addressLine1:
          description: address line 1
          type: string
          example: Maskingatan 11
        addressLine2:
          description: address line 2
          type: string
          example: Maskingatan 11
        city:
          description: city name
          type: string
          example: Gothenburg
        postalCode:
          description: postal code
          type: string
          example: 417 64
        countryCode:
          description: The 2-letters ISO country code
          type: string
          pattern: ^[A-Z]{2}$
          example: US
    LocationRectangle:
      description: The coordinates of a rectangle area
      type: object
      required:
        - south
        - west
        - east
        - north
      properties:
        south:
          type: number
        west:
          type: number
        north:
          type: number
        east:
          type: number
      example:
        south: 50.0929802
        west: 14.4012451
        north: 50.0812615
        east: 14.4394467
    LocationCircle:
      description: The coordinates of a circle
      type: object
      required:
        - lat
        - long
        - radius
      properties:
        lat:
          type: number
          description: "Latitude of the center coordinates"
        long:
          type: number
          description: "Longitude of the center coordinates"
        radius:
          type: number
          description: "Radius from the centre coordinates in meters"
      example:
        lat: 50.0929802
        long: 14.4012451
        radius: 100
    Currency:
      description: The ISO4217 currency code
      type: string
      pattern: ^[A-Z]{3}$
      minLength: 3
      maxLength: 3
      example: EUR
    Amount:
      description: A monetary amount in a given currency
      type: string
      pattern: ^[0-9]+(\.[0-9]+){0,1}$
      minLength: 1
      maxLength: 99
      example: '40.00'
    AdditionalPricePlanProperties:
      type: object
      required:
        - accommodation
        - roomTypePlan
      properties:
        accommodation:
          description: reference of the accommodation
          type: string
          example: prov.1234
        roomType:
          description: reference of the room type in the accommodation
          type: string
          example: ND
        roomTypePlan:
          $ref: '#/components/schemas/RoomTypePlan'
    Address:
      description: Address of a hotel
      type: object
      required:
        - country
        - streetAddress
        - locality
      properties:
        streetAddress:
          description: address line
          type: string
          example: Maskingatan 11
        premise:
          type: string
          example: Gota Alv River
        locality:
          description: city name
          type: string
          example: Gothenburg
        postalCode:
          description: postal code
          type: string
          example: 417 64
        country:
          description: country
          type: string
          example: China
    MediaItem:
      description: Photo or Image
      type: object
      properties:
        type:
          type: string
          enum:
            - photo
            - video
        width:
          type: integer
        height:
          type: integer
        url:
          type: string
          format: url
    RoomAmenities:
      description: The list of amenities available with this room type
      type: object
      required:
        - name
        - description
        - otaCode
      properties:
        name:
          description: The name of this amenity
          type: string
        description:
          description: Description of the amenity
          type: string
        otaCode:
          description: The OTA code for this amenity
          type: string
    RoomSize:
      description: the size of the room
      type: object
      properties:
        value:
          description: The size value of this room
          type: number
          example: 15
        unit:
          description: The unit for this room size
          type: string
          enum:
            - metric
            - imperial
          example: metric
          default: metric
    RoomOccupancy:
      description: Maximum occupancy for this room type
      type: object
      required:
        - adults
        - children
      properties:
        adults:
          type: integer
        children:
          type: integer
    RoomPolicies:
      type: object
      additionalProperties:
        type: string
    FareItem:
      description: A fare item
      type: object
      required:
        - description
        - amount
        - usage
      properties:
        description:
          type: string
          example: Navigation Surcharge
        amount:
          $ref: '#/components/schemas/Amount'
        usage:
          description: The usage of the fare item
          type: string
          enum:
            - base
            - surcharge
          default: base
        code:
          description: The optional code of the fare item
          type: string
          pattern: ^[A-Z0-9]{2}$
          example: S1
        components:
          description: A fare component
          type: array
          items:
            $ref: '#/components/schemas/FareComponentItem'
    TaxItem:
      description: A tax item
      type: object
      required:
        - description
        - amount
        - code
      properties:
        description:
          type: string
          example: Air Travelers Security Charge (ATSC)
        amount:
          $ref: '#/components/schemas/Amount'
        code:
          type: string
          pattern: ^[A-Z0-9]{2}$
          example: CA
    RoomTypePlan:
      type: object
      required:
        - roomId
      properties:
        mealPlan:
          type: string
        mealPlanCode:
          type: string
        ratePlanId:
          type: string
        ratePlan:
          type: string
        ratePlanDescription:
          type: string
        roomId:
          type: string
      example:
        mealPlanCode: BB
        ratePlanId: BAR
        roomId: FM4
    FareComponentItem:
      type: object
      required:
        - name
        - basisCode
        - designator
        - conditions
      properties:
        name:
          description: The name of the fare component
          type: string
          example: Basic
        basisCode:
          description: The Fare Basis code of the fare component
          type: string
          pattern: ^[A-Z0-9]+$
          example: A30ZABA
        designator:
          description: The Reservation Booking Designator (RBD)
          type: string
          pattern: ^[A-Z]{1}$
          example: A
        conditions:
          description: The fare conditions associated with the fare component
          type: string
          example: No flight changes are permitted.
