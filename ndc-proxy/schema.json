{
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "username"
        ]
      },
      "ServerNode": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1
          },
          "isEnabled": {
            "type": "string",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "master",
              "slave"
            ]
          }
        },
        "type": "object",
        "required": [
          "url",
          "isEnabled",
          "type"
        ]
      },
      "NodeAvailabilityStatus": {
        "properties": {
          "status": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "status",
          "errorMessage"
        ]
      },
      "HealthCheckResponse": {
        "properties": {
          "baseUrl": {
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "nok"
            ]
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "slave",
              "master"
            ]
          }
        },
        "type": "object",
        "required": [
          "baseUrl",
          "status",
          "nodeType"
        ]
      },
      "CarrierConfiguration": {
        "properties": {
          "carrierCode": {
            "type": "string",
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "carrierCode"
        ]
      },
      "Amenity": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string"
          },
          "otaCode": {
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "otaCode"
        ]
      },
      "BrandedFare": {
        "properties": {
          "brandedFareId": {
            "type": "string",
            "minLength": 1
          },
          "marketingName": {
            "type": "string",
            "minLength": 1
          },
          "isRefundable": {
            "type": "boolean"
          },
          "isChangeable": {
            "type": "boolean"
          },
          "isPenalty": {
            "type": "boolean"
          },
          "checkedBagsIncluded": {
            "minLength": 1,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "brandedFareId",
          "marketingName",
          "isRefundable",
          "isChangeable",
          "isPenalty",
          "checkedBagsIncluded"
        ]
      },
      "LocationRectangle": {
        "properties": {
          "east": {
            "maximum": 180,
            "type": "number",
            "minimum": -180,
            "minLength": 1
          },
          "north": {
            "maximum": -90,
            "type": "number",
            "minimum": -90,
            "minLength": 1
          },
          "south": {
            "maximum": -90,
            "type": "number",
            "minimum": -90,
            "minLength": 1
          },
          "west": {
            "maximum": 180,
            "type": "number",
            "minimum": -180,
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "east",
          "north",
          "south",
          "west"
        ]
      },
      "LocationPoint": {
        "properties": {
          "lat": {
            "maximum": -90,
            "type": "number",
            "minimum": -90,
            "minLength": 1
          },
          "long": {
            "maximum": 180,
            "type": "number",
            "minimum": -180,
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "lat",
          "long"
        ]
      },
      "LocationCircle": {
        "properties": {
          "radius": {
            "minimum": 0,
            "type": "number",
            "minLength": 1
          },
          "lat": {
            "maximum": -90,
            "type": "number",
            "minimum": -90,
            "minLength": 1
          },
          "long": {
            "maximum": 180,
            "type": "number",
            "minimum": -180,
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "radius",
          "lat",
          "long"
        ]
      },
      "LocationInformation": {
        "properties": {
          "circle": {
            "$ref": "#/components/schemas/LocationCircle"
          },
          "polygon": {
            "items": {
              "$ref": "#/components/schemas/LocationPoint"
            },
            "minItems": 3,
            "type": "array"
          },
          "rectangle": {
            "$ref": "#/components/schemas/LocationRectangle"
          }
        },
        "type": "object",
        "required": [
          "circle",
          "polygon",
          "rectangle"
        ]
      },
      "LocationIATA": {
        "properties": {
          "iataCode": {
            "minLength": 1,
            "type": "string"
          },
          "locationType": {
            "enum": [
              "airport",
              "railstation",
              "city"
            ],
            "type": "string",
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "iataCode",
          "locationType"
        ]
      },
      "TravelOperator": {
        "properties": {
          "flightNumber": {
            "type": "string",
            "minLength": 1
          },
          "iataCode": {
            "type": "string",
            "minLength": 1
          },
          "operatorType": {
            "enum": [
              "airline",
              "railway"
            ],
            "type": "string",
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "flightNumber",
          "iataCode",
          "operatorType"
        ]
      },
      "SegmentCriteria": {
        "properties": {
          "arrivalTime": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "departureTime": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "destination": {
            "minLength": 1,
            "type": "string",
            "$ref": "#/components/schemas/LocationIATA"
          },
          "operator": {
            "$ref": "#/components/schemas/TravelOperator"
          },
          "origin": {
            "minLength": 1,
            "type": "string",
            "$ref": "#/components/schemas/LocationIATA"
          }
        },
        "type": "object",
        "required": [
          "departureTime",
          "destination",
          "origin"
        ]
      },
      "FlightSearchCriteria": {
        "properties": {
          "segments": {
            "items": {
              "$ref": "#/components/schemas/SegmentCriteria"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "segments"
        ]
      },
      "PassengerSearchCriteria": {
        "properties": {
          "count": {
            "maximum": 9,
            "type": "number",
            "minimum": 0,
            "minLength": 1
          },
          "type": {
            "enum": [
              "ADT",
              "CHD",
              "INF"
            ],
            "type": "string",
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "count",
          "type"
        ]
      },
      "AccommodationSearchCriteria": {
        "properties": {
          "arrival": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "departure": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "location": {
            "$ref": "#/components/schemas/LocationInformation",
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "arrival",
          "departure",
          "location"
        ]
      },
      "SearchCriteria": {
        "properties": {
          "accommodation": {
            "$ref": "#/components/schemas/AccommodationSearchCriteria"
          },
          "itinerary": {
            "$ref": "#/components/schemas/FlightSearchCriteria"
          },
          "passengers": {
            "items": {
              "$ref": "#/components/schemas/PassengerSearchCriteria"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "accommodation",
          "itinerary",
          "passengers"
        ]
      },
      "Price": {
        "properties": {
          "currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "public": {
            "minLength": 1,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "currency",
          "public"
        ]
      },
      "ExtendedPriceDetails": {
        "properties": {
          "commission": {
            "minLength": 1,
            "type": "number"
          },
          "taxes": {
            "minLength": 1,
            "type": "number"
          },
          "currency": {
            "minLength": 1,
            "type": "string",
            "format": "currency"
          },
          "public": {
            "minLength": 1,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "commission",
          "taxes",
          "currency",
          "public"
        ]
      },
      "Segment": {
        "properties": {
          "arrivalTime": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "minLength": 1,
            "type": "string"
          },
          "departureTime": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "minLength": 1,
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/LocationIATA",
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/TravelOperator",
            "minLength": 1,
            "type": "string"
          },
          "origin": {
            "$ref": "#/components/schemas/LocationIATA",
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "arrivalTime",
          "departureTime",
          "destination",
          "operator",
          "origin"
        ]
      },
      "CheckInOutPolicy": {
        "properties": {
          "checkOutTime": {
            "minLength": 1,
            "type": "string"
          },
          "checkinTime": {
            "type": "string",
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "checkOutTime",
          "checkinTime"
        ]
      },
      "Address": {
        "properties": {
          "country": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "premise": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "country",
          "locality",
          "postalCode",
          "premise",
          "streetAddress"
        ]
      },
      "ContactInformation": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "emails": {
            "items": {},
            "type": "array"
          },
          "phoneNumbers": {
            "items": {},
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "address",
          "emails",
          "phoneNumbers"
        ]
      },
      "MediaItem": {
        "properties": {
          "height": {
            "type": "number"
          },
          "type": {
            "enum": [
              "video",
              "photo"
            ],
            "type": "string",
            "minLength": 1
          },
          "url": {
            "format": "url",
            "type": "string"
          },
          "width": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "height",
          "type",
          "url",
          "width"
        ]
      },
      "RoomSize": {
        "properties": {
          "unit": {
            "enum": [
              "metric",
              "imperial"
            ],
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "unit",
          "value"
        ]
      },
      "RoomType": {
        "properties": {
          "amenities": {
            "items": {
              "$ref": "#/components/schemas/Amenity"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "maximumOccupancy": {
            "$ref": "#/components/schemas/Occupancy"
          },
          "media": {
            "items": {
              "$ref": "#/components/schemas/MediaItem"
            },
            "type": "array"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "policies": {
            "$ref": "#/components/schemas/Map"
          },
          "size": {
            "$ref": "#/components/schemas/RoomSize"
          }
        },
        "type": "object",
        "required": [
          "amenities",
          "description",
          "maximumOccupancy",
          "media",
          "name",
          "policies",
          "size"
        ]
      },
      "Accommodation": {
        "properties": {
          "checkinoutPolicy": {
            "$ref": "#/components/schemas/CheckInOutPolicy",
            "minLength": 1,
            "type": "string"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/ContactInformation",
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "items": {
              "$ref": "#/components/schemas/LocationInformation"
            },
            "type": "array"
          },
          "media": {
            "items": {
              "$ref": "#/components/schemas/MediaItem"
            },
            "type": "array"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "otherPolicies": {
            "items": {},
            "type": "array"
          },
          "rating": {
            "type": "number"
          },
          "roomTypes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RoomType"
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "hotel",
              "house"
            ],
            "type": "string",
            "minLength": 1
          }
        },
        "type": "object",
        "required": [
          "checkinoutPolicy",
          "contactInformation",
          "description",
          "location",
          "media",
          "name",
          "otherPolicies",
          "rating",
          "roomTypes",
          "type"
        ]
      },
      "PricePlan": {
        "properties": {
          "amenities": {
            "items": {},
            "type": "array"
          },
          "checkedBaggages": {
            "$ref": "#/components/schemas/Object",
            "minLength": 1,
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "amenities",
          "checkedBaggages",
          "name"
        ]
      },
      "PricePlanReference": {
        "properties": {
          "accommodation": {
            "minLength": 1,
            "type": "string"
          },
          "roomType": {
            "minLength": 1,
            "type": "string"
          },
          "flights": {
            "items": {
              "$ref": "#/components/schemas/Array"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "accommodation",
          "roomType",
          "flights"
        ]
      },
      "Offer": {
        "properties": {
          "expiration": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ],
            "minLength": 1,
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Price",
            "minLength": 1,
            "type": "string"
          },
          "pricePlansReferences": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PricePlanReference"
            },
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "expiration",
          "price",
          "pricePlansReferences"
        ]
      },
      "Itineraries": {
        "properties": {
          "segments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Segment"
            },
            "type": "object"
          },
          "combinations": {
            "items": {
              "$ref": "#/components/schemas/Map"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "segments",
          "combinations"
        ]
      },
      "SearchResults": {
        "properties": {
          "offers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Offer"
            },
            "type": "object"
          },
          "itineraries": {
            "items": {
              "$ref": "#/components/schemas/Itineraries"
            },
            "type": "array"
          },
          "accommodations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Accommodation"
            },
            "type": "object"
          },
          "pricePlans": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PricePlan"
            },
            "type": "object"
          },
          "passengers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Passenger"
            },
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "offers",
          "itineraries",
          "accommodations",
          "pricePlans",
          "passengers"
        ]
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "YourProject",
    "description": "A delightful way to building a Node.js RESTful API Services with beautiful code written in TypeScript",
    "version": "3.2.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/offers/search": {
      "post": {
        "operationId": "OffersController.search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCriteria"
              }
            }
          },
          "description": "SearchCriteria",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            },
            "description": ""
          }
        },
        "summary": "Search",
        "tags": [
          "Offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ]
}